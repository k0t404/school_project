import telebot
import datetime
from con2 import BOT_TOKEN
from telebot import types
from data import db_session
from data.lesssons import Lesssons
from  data.users import User

bot = telebot.TeleBot(BOT_TOKEN)


def start_keyboard():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    btn1 = types.KeyboardButton('–ß—Ç–æ –º–æ–∂–µ—Ç –±–æ—Ç?')
    btn2 = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ_—É—Ä–æ–∫–æ–≤')
    btn3 = types.KeyboardButton('–í–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è')
    btn4 = types.KeyboardButton('–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è')
    btn5 = types.KeyboardButton('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    return markup


def starts(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ê—Ä—Ç–µ–º, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏!",
                     reply_markup=start_keyboard())


def search(message):
    bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=start_keyboard())


def question(message):
    bot.send_message(message.from_user.id, "–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –Ω–∞ –Ω–∞—à—É –ø–æ—á—Ç—É")
    bot.send_message(message.from_user.id, "cot5626@mail.ru", reply_markup=start_keyboard())


def helper(message):
    bot.send_message(message.from_user.id, "–Ø –±–æ—Ç –ê—Ä—Ç–µ–º.")
    bot.send_message(message.from_user.id, "–Ø –º–æ–≥—É:")
    bot.send_message(message.from_user.id, "–í—ã–≤–µ—Å—Ç–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
    bot.send_message(message.from_user.id, "–í–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å—Å–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞")
    bot.send_message(message.from_user.id, "–ò–≥—Ä–∞—Ç—å –≤ –¥–æ—Ç—É 2", reply_markup=start_keyboard())


def raspisanie(clas, message):
    days = ['–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö', '–í–¢–û–†–ù–ò–ö', '–°–†–ï–î–ê', '–ß–ï–¢–í–ï–†–ì', '–ü–Ø–¢–ù–ò–¶–ê']
    date = days[datetime.datetime.today().weekday()]
    clas = f'{clas[0]} "{clas[1].capitalize()}" –∫–ª–∞—Å—Å'
    db_sess = db_session.create_session()
    lessons = []
    for row in db_sess.query(Lesssons).filter(Lesssons.class_letter == clas, Lesssons.day == date):
        lesson = [row.lesson_pos, row.lesson, row.cabinet, row.class_letter, row.day]
        lessons.append(lesson)
    if lessons:
        bot.send_message(message.from_user.id, f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è {clas}', reply_markup=start_keyboard())
        for row in lessons:
            if None not in row:
                bot.send_message(message.from_user.id, '       '.join(row), reply_markup=start_keyboard())
    else:
        bot.send_message(message.from_user.id, '–¢–∞–∫–æ–π –∫–ª–∞—Å—Å –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞',
                         reply_markup=start_keyboard())


def qu1(message):
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ: –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ '–≤–∞—à –∫–ª–∞—Å—Å(–∫ –ø—Ä–∏–º–µ—Ä—É 1 —å)'")


def qu2(message):
    pass


def qu3(message):
    bot.send_message(message.from_user.id, "–ö—Ç–æ –≤—ã? (–ó–∞–≤—É—á/—É—á–∏—Ç–µ–ª—å/—É—á–µ–Ω–∏–∫")


def qu4(message):
    if message.text.lower() == '–∑–∞–≤—É—á':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª—é—á")
    if message.text.lower() == '—É—á–∏—Ç–µ–ª—å':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª—é—á")
    if message.text.lower() == '—É—á–µ–Ω–∏–∫':
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–ª–∞—Å—Å")


def authorization(message):
    print(1)
    print(1, message.from_user.id, message.chat.id)
    db_sess = db_session.create_session()
    user = User()
    user.user_id = message.from_user.id
    if len(message.text) == 9:
        user.about = '–∑–∞–≤—É—á'
        user.hashed_password = message.text
    elif len(message.text) == 7:
        user.about = '—É—á–∏—Ç–µ–ª—å'
        user.hashed_password = message.text
    elif len(message.text) == 4 or len(message) == 3:
        user.about = '—É—á–µ–Ω–∏–∫'
        user.hashed_password = f'{message.text[0]} "{message.text[1]}" –∫–ª–∞—Å—Å'
        print(f'{message.text[0]} "{message.text[1]}" –∫–ª–∞—Å—Å')
    db_sess.add(user)
    db_sess.commit()
    bot.send_message(message.from_user.id, '–≥–æ—Ç–æ–≤–æ', reply_markup=start_keyboard())

def ismeneniya(message):
    pass


# –Ω–µ –Ω—É–∂–Ω—ã–µ
'''def url(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text='–ù–∞—à —Å–∞–π—Ç', url=link)
    markup.add(btn1)
    bot.send_message(message.from_user.id, "–ü–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç", reply_markup=markup) '''